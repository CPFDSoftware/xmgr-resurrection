dnl Process this file with autoconf to produce a configure script.

AC_INIT(src/main.c)
AC_CONFIG_AUX_DIR(ac-tools)

AC_CONFIG_HEADER(config.h:conf/config.h.in)

AC_PREFIX_DEFAULT("/usr/local")

AC_SUBST(MKINSTALLDIRS)

AC_SUBST(ACEGR)
AC_SUBST(GR_HOME)
AC_SUBST(GUI_LIBS)
AC_SUBST(NOGUI_LIBS)
AC_SUBST(NETCDF_LIBS)
AC_SUBST(XDR_LIB)
AC_SUBST(DL_LIB)
AC_SUBST(FFTW_LIB)
AC_SUBST(HELPVIEWER)

SUBDIRS="cephes src"
AC_SUBST(SUBDIRS)

dnl option to define config file without autodetect
AC_ARG_ENABLE(config,
[  --enable-config=CONF_FILE 
                          define configuration file so autodection won't be used
                          (not recommended!)],
[CONF_FILE="${enableval}"])

if test -z "${CONF_FILE}"
then
  dnl Check for host type
  AC_CANONICAL_HOST
  case "${host}" in
    i?86-*-linux-*) CONF_FILE="ix86-linux";;
    *-*-linux-*) CONF_FILE="linux";;
    i?86-*-sco-*) CONF_FILE="ix86-sco";;
    i?86-*-cygwin32) CONF_FILE="ix86-cygwin32";;
    alpha*-dec-osf4.*) CONF_FILE="alpha-osf4";;
    hppa*-hp-hpux*) CONF_FILE="hppa-hpux";;
    mips-sgi-irix6.4*) CONF_FILE="mips-irix6.4";;
    mips-sgi-irix*) CONF_FILE="mips-irix";;
    rs6000-ibm-aix3*) CONF_FILE="rs6000-aix3";;
    rs6000-ibm-aix4*) CONF_FILE="rs6000-aix4";;
    mips-dec-ultrix*) CONF_FILE="mips-ultrix";;
    sparc-sun-sunos4*) CONF_FILE="sparc-sunos4";;
    sparc-sun-solaris*) CONF_FILE="sparc-sunos5";;
    m88k-dg-dgux*) CONF_FILE="m88k-dgux";;
    *) CONF_FILE="none";
  esac
fi

if test ${CONF_FILE} = "none"
then
  AC_MSG_WARN(no predefined configuration found for ${host})
else
  AC_MSG_RESULT(using \`conf/$CONF_FILE' as config file)
  if test -r conf/$CONF_FILE
  then
    . conf/$CONF_FILE
  else
    AC_MSG_ERROR(Can't open file \`conf/$CONF_FILE' for reading!)
    exit 1
  fi
fi

dnl Chance to add include path
AC_ARG_ENABLE(extra-incpath,
[  --enable-extra-incpath=PATH 
                          define extra include path (dir1:dir2:...)],
[CPPFLAGS="${CPPFLAGS} -I`echo ${enableval}|sed 's/:/\ -I/g'`"])

dnl ... and ld path
AC_ARG_ENABLE(extra-ldpath,
[  --enable-extra-ldpath=PATH 
                          define extra ld path (dir1:dir2:...)],
[LDFLAGS="-L`echo ${enableval}|sed 's/:/\ -L/g'` ${LDFLAGS}";
  case "${host}" in
    sparc-sun-solaris*) LDFLAGS="-R:${enableval} ${LDFLAGS}";;
  esac
])


dnl Checks for C compiler
AC_PROG_CC
AC_ISC_POSIX
AC_AIX

dnl **** Check for gcc strength-reduce bug ****
dnl (this part is stolen from WINE config)

if test "x${GCC}" = "xyes"
then
  CFLAGS="$CFLAGS"
  AC_CACHE_CHECK( "for gcc strength-reduce bug", ac_cv_c_gcc_strength_bug,
                  AC_TRY_RUN([
int main(void) {
  static int Array[[3]];
  unsigned int B = 3;
  int i;
  for(i=0; i<B; i++) Array[[i]] = i - 3;
  exit( Array[[1]] != -2 );
}],
    ac_cv_c_gcc_strength_bug="no",
    ac_cv_c_gcc_strength_bug="yes",
    ac_cv_c_gcc_strength_bug="yes") )
  if test "$ac_cv_c_gcc_strength_bug" = "yes"
  then
    CFLAGS="$CFLAGS -fno-strength-reduce"
  fi
fi

dnl Checks for FPU arithmetics

AC_CACHE_CHECK( "for FPU arithmetics type", ac_cv_c_fpu_arithmetics_type,
                  AC_TRY_RUN([
#include <stdio.h>
#include <string.h>

#define LOG2EA 0.44269504088896340735992
#define ACCURACY "%1.4f"

typedef union {unsigned short s[[4]]; double d;} XTYPE;

XTYPE X[[]] = { 
              {{0,0,0,0}},			    /* Unknown             */
              {{0x3fdc,0x551d,0x94ae,0x0bf8}}, 	    /* Big endian     IEEE */
              {{0x0bf8,0x94ae,0x551d,0x3fdc}}, 	    /* Littile endian IEEE */
              {{0037742,0124354,0122560,0057703}}   /* DEC                 */
            };
            
int main (void)
{
    int i; char TMPSTR[[1024]]; char LOG2EA_STR[[80]];
    i = 0;
 
    sprintf(LOG2EA_STR, ACCURACY, LOG2EA);
 
    for (i=3; i >= 0; i--)
    {
      	sprintf(TMPSTR, ACCURACY, X[[i]].d);
      	if (strcmp(TMPSTR, LOG2EA_STR) == 0) {
    	    break;
      	}
    }
 
    exit(i);
}],
    ac_cv_c_fpu_arithmetics_type="Unknown",
    [case "$?" in
      "1"[)] ac_cv_c_fpu_arithmetics_type="Big endian IEEE" ;;
      "2"[)] ac_cv_c_fpu_arithmetics_type="Little endian IEEE" ;;
      "3"[)] ac_cv_c_fpu_arithmetics_type="DEC" ;;
    esac],
    ac_cv_c_fpu_arithmetics_type="Unknown") )

case "$ac_cv_c_fpu_arithmetics_type" in
  "DEC")                AC_DEFINE(HAVE_DEC_FPU) ;;
  "Little endian IEEE") AC_DEFINE(HAVE_LIEEE_FPU) ;;
  "Big endian IEEE")    AC_DEFINE(HAVE_BIEEE_FPU) ;;
esac


dnl Checks for programs.
AC_PROG_INSTALL
case "$INSTALL" in
  /*) ;;
   *) INSTALL=`pwd`/"$INSTALL" ;
esac

MKINSTALLDIRS=`pwd`/ac-tools/mkinstalldirs

AC_PROG_RANLIB
AC_PROG_LN_S
AC_PROG_YACC

AC_PROG_MAKE_SET

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_STRUCT_TM

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_VFORK
AC_FUNC_ALLOCA
AC_CHECK_FUNCS(getcwd gethostname)
AC_CHECK_FUNCS(strdup strstr strerror)
AC_CHECK_FUNCS(drand48)
AC_CHECK_FUNCS(memcpy memmove)
AC_CHECK_FUNCS(popen)
AC_CHECK_FUNCS(vsnprintf)
AC_CHECK_FUNCS(on_exit)
AC_CHECK_FUNC(mkfifo, SUBDIRS="$SUBDIRS acegr_np")

dnl Checks for libm
AC_CHECK_LIB(m, main)
if test "$ac_cv_lib_m_main" = yes; then
  dnl Solaris needs this for finite() & co
  AC_CHECK_HEADERS(ieeefp.h)

  dnl Those functions are usually found in libm but...
  AC_CHECK_LIB(m, hypot, AC_DEFINE(HAVE_HYPOT))
  AC_CHECK_LIB(m, rint, AC_DEFINE(HAVE_RINT))
  AC_CHECK_LIB(m, cbrt, AC_DEFINE(HAVE_CBRT))
  AC_CHECK_LIB(m, log2, AC_DEFINE(HAVE_LOG2))
  AC_CHECK_LIB(m, asinh, AC_DEFINE(HAVE_ASINH))
  AC_CHECK_LIB(m, acosh, AC_DEFINE(HAVE_ACOSH))
  AC_CHECK_LIB(m, atanh, AC_DEFINE(HAVE_ATANH))
  AC_CHECK_LIB(m, lgamma, AC_DEFINE(HAVE_LGAMMA))
  
  dnl Some braindamaged compiler suites don't have the lgamma define though
  dnl the function itself does exist in libm!
  if test "$ac_cv_lib_m_lgamma" = yes; then
    AC_CACHE_CHECK( "whether lgamma is defined in math.h",
      ac_cv_lgamma_in_math_h, AC_TRY_COMPILE(
        [#include <math.h>], 
        [double (*fnc)(double x) = lgamma;],
        ac_cv_lgamma_in_math_h="yes"; AC_DEFINE(HAVE_LGAMMA_IN_MATH_H),
        ac_cv_lgamma_in_math_h="no") )
  fi
  
  AC_CHECK_LIB(m, erf, AC_DEFINE(HAVE_ERF))
  AC_CHECK_LIB(m, erfc, AC_DEFINE(HAVE_ERFC))
  AC_CHECK_LIB(m, j0, AC_DEFINE(HAVE_J0))
  AC_CHECK_LIB(m, j1, AC_DEFINE(HAVE_J1))
  AC_CHECK_LIB(m, jn, AC_DEFINE(HAVE_JN))
  AC_CHECK_LIB(m, y0, AC_DEFINE(HAVE_Y0))
  AC_CHECK_LIB(m, y1, AC_DEFINE(HAVE_Y1))
  AC_CHECK_LIB(m, yn, AC_DEFINE(HAVE_YN))
  AC_CHECK_LIB(m, finite, AC_DEFINE(HAVE_FINITE))
  dnl a C9X-compatible isfinite() may be a good replacement for finite()
  if test "$ac_cv_lib_m_finite" != yes; then
    AC_CHECK_LIB(m, isfinite, AC_DEFINE(HAVE_ISFINITE))
  fi
fi

dnl Check for libgen
AC_CHECK_LIB(gen, main)

dnl Check for XDR
AC_CHECK_FUNC(xdrstdio_create, XDR_LIB="", XDR_LIB="NONE")

if test "${XDR_LIB}" = "NONE"; then
  dnl XDR stuff is not in the default libraries.  See if it's in some other.
  for lib in nsl rpc xdr; do
    AC_CHECK_LIB($lib, xdrstdio_create, [XDR_LIB="-l$lib"; break])
  done
fi

if test "${XDR_LIB}" = "NONE"; then
  XDR_LIB=
  AC_MSG_RESULT("No XDR library found\; grconvert will not be built")
else
  SUBDIRS="$SUBDIRS grconvert"
  AC_DEFINE(HAVE_XDR)
fi

dnl Check for dlopen() interface
dnl           (Linux, SunOS-[4,5], OSF, IRIX, AIX-4, UnixWare, ...)
AC_CHECK_FUNC(dlopen, DL_LIB="", DL_LIB="NONE")

if test "${DL_LIB}" = "NONE"; then
  dnl dlopen stuff is not in the default libraries.  See if it's in some other.
  for lib in dl; do
    AC_CHECK_LIB($lib, dlopen, [DL_LIB="-l$lib"; break])
  done
fi

if test "${DL_LIB}" != "NONE"; then
  AC_DEFINE(HAVE_DLOPEN)
else
  dnl Check for shl_load() interface (HP/UX)
  AC_CHECK_FUNC(shl_load, [DL_LIB=""; AC_DEFINE(HAVE_SHL_LOAD)])

  if test "${DL_LIB}" = "NONE"; then
    dnl shl_load stuff is not in the default libraries.  See if it's in some other.
    for lib in dld; do
      AC_CHECK_LIB($lib, shl_load, [DL_LIB="-l$lib"; break])
    done
  fi
fi

if test "${DL_LIB}" = "NONE"; then
  AC_MSG_RESULT("Support for dll modules will not be compiled")
  DL_LIB=""
fi

dnl Check how to print
AC_CHECK_PROG(PRINT_CMD, lpr, 'lpr', 'lp -c')

dnl Final list of subdirs
SUBDIRS="$SUBDIRS doc examples auxiliary"

dnl **** Choose a GUI *****

NOGUI_LIBS="$LIBS"

AC_PATH_XTRA
if test "$no_x" = yes; then
  GUI="NONE_GUI"
  ACEGR=gr
else
dnl Check for Motif
  X11_LIBS="$X_LIBS -lXt -lXext -lX11 $X_PRE_LIBS $X_EXTRA_LIBS"
  dnl some Motif-2.1 variants need the -lXp library
  AC_CHECK_LIB(Xp,main,X11_LIBS="-lXp $X11_LIBS",,$X11_LIBS)
  AC_CHECK_LIB(Xm,main,ACEGR=xmgr; GUI="MOTIF_GUI",,$X11_LIBS)
  if test "${GUI}" = "MOTIF_GUI"; then
    AC_DEFINE(HAVE_MOTIF)
    ACEGR=xmgr
    GUI_LIBS="-lXm $X11_LIBS"
    LIBS="$GUI_LIBS $LIBS"
    CFLAGS="$CFLAGS $X_CFLAGS"
dnl check for Xpm lib
    AC_CHECK_LIB(Xpm,main,GUI_LIBS="$GUI_LIBS -lXpm"; AC_DEFINE(HAVE_XPM)
                 AC_CHECK_HEADERS(xpm.h X11/xpm.h))
dnl check for Xbae widget
    AC_CHECK_LIB(Xbae,main,GUI_LIBS="-lXbae $GUI_LIBS"; AC_DEFINE(HAVE_LIBXBAE),,"$GUI_LIBS")
  else
dnl only Motif GUI is supported by now:
    GUI="NONE_GUI"
    AC_MSG_WARN("Motif has not been found\; building a GUI-less version")
  fi
fi


if test "${GUI}" != "NONE_GUI"; then

dnl use libhelp
  AC_ARG_ENABLE(libhelp,
  [  --enable-libhelp        use libhelp (default = no)],
  [case "${enableval}" in
    yes) libhelp=true ;;
    no)  libhelp=false;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-libhelp) ;;
  esac],[libhelp=false])

dnl define help viewer
  AC_ARG_ENABLE(helpviewer,
  [  --enable-helpviewer=COMMAND 
                          define (alternative) help viewer command],
  [HELPVIEWER="-DGR_HELPVIEWER=${enableval}"])

  case $libhelp in
    true) AC_CHECK_LIB(hlpclient,get_help,GUI_LIBS="-lhlpclient $GUI_LIBS"; AC_DEFINE(WITH_LIBHELP));;
    *)  ;;
  esac
  
dnl use editres  
  AC_ARG_ENABLE(editres,
  [  --enable-editres        enable editres support (default = yes)],
  [case "${enableval}" in
    yes) editres=true ;;
    no)  editres=false;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-editres) ;;
  esac],[editres=true])

  case $editres in
    true) AC_CHECK_LIB(Xmu,_XEditResCheckMessages,GUI_LIBS="-lXmu $GUI_LIBS"; AC_DEFINE(WITH_EDITRES));;
    *)  ;;
  esac
fi



dnl use netcdf  
AC_ARG_ENABLE(netcdf,
[  --enable-netcdf         enable support for netCDF (default = yes)],
[case "${enableval}" in
  yes) netcdf=true ;;
  no)  netcdf=false;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-netcdf) ;;
esac],[netcdf=true])

dnl use mfhdf  
AC_ARG_ENABLE(mfhdf,
[  --enable-mfhdf          use NCSA combined libs for netCDF (default = no)],
[case "${enableval}" in
  yes) mfhdf=true ;;
  no)  mfhdf=false;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-mfhdf) ;;
esac],[mfhdf=false])

case $netcdf in
  true) AC_CHECK_LIB(netcdf,main,NETCDF_LIBS="-lnetcdf"; AC_DEFINE(HAVE_NETCDF))
        case $mfhdf in
          true) AC_CHECK_LIB(df,main,NETCDF_LIBS="$NETCDF_LIBS -ldf"; AC_DEFINE(HAVE_MFHDF));;
          *) ;;
        esac ;;
  *) ;;
esac

dnl check if user wants to compile acegr_np lib with support for Fortran
AC_ARG_ENABLE(f77,
[  --enable-f77            include fortran wrapper for libacegr_np 
                          (default = yes)],
[case "${enableval}" in
  yes) f77=true ;;
  no)  f77=false;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-f77) ;;
esac],[f77=true])

if test $f77 = true; then
  case "${host}" in
     hppa*-hp-hpux*) FC="fort77 +U77";;
    rs6000-ibm-aix*) forts="xlf f77 g77 f90";;
                  *) forts="f77 fort77 g77 f90 f95";;
  esac
  
  for fc in $forts
  do
    AC_CHECK_PROG(FC, $fc, "$fc")
    if test "x$FC" != "x"; then
      break
    fi
  done
fi

if test "x$FC" != "x"; then
  AC_DEFINE(HAVE_F77)
  dnl **** Check whether f77 adds underscore to external symbol names ****

  AC_CACHE_CHECK("whether Fortran adds underscore to external symbol names",
                 ac_cv_c_f77_underscore,
cat > conftest_f77.f <<EOF
      CALL ACTEST ()
      STOP
      END
EOF

cat > conftest_c.c <<EOF
void actest_(void)
{
    return;
}
EOF

  $CC $CFLAGS -c conftest_c.c > /dev/null 2>&1
  $FC conftest_f77.f conftest_c.o -o conftest $NOGUI_LIBS > /dev/null 2>&1

  case "$?" in
    0[)] ac_cv_c_f77_underscore="yes" ;;
    *[)] ac_cv_c_f77_underscore="no" ;;
  esac
  rm -f conftest*
  )

  if test "$ac_cv_c_f77_underscore" = "yes"
  then
    AC_DEFINE(NEED_F77_UNDERSCORE)
  fi
fi

dnl check if user wants to compile with debugging support
AC_ARG_ENABLE(debug,
[  --enable-debug          turn on debugging (default = no)],
[case "${enableval}" in
  yes) debug=true ;;
  no)  debug=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
esac],[debug=false])

case $debug in
  true) CFLAGS="$DEBUG $CFLAGS"; AC_DEFINE(WITH_DEBUG);;
  *) CFLAGS="$OPTIMIZE $CFLAGS";;
esac

dnl define home dir of ACE/gr
GR_HOME=${ac_default_prefix}/xmgr
AC_ARG_ENABLE(acegr-home,
[  --enable-acegr-home=GR_HOME 
                          define ACE/gr home dir (default = ${ac_default_prefix}/xmgr)],
[GR_HOME="${enableval}"])


AC_OUTPUT(Make.conf:conf/Make.conf.in)
